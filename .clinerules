# 00-general

## 概要

このプロジェクトは`git safe-clone`というカスタムサブコマンドを提供するためのツールです。
`git safe-clone`は、危険なリポジトリをcloneして、十分なリスク分析をしないまま実行しないようにするための安全なgit cloneです。
cloneしたリポジトリはLLMによるチェックが行われ、危険と判断された場合にはcloneしたディレクトリが消されます。

## cloneからリスク分析の流れ
- git clone
- リポジトリをgit clone
- clone先のディレクトリに移動
- docker container上のopenhandsに危険かどうかを判断させる
    - openhandsのアウトプットの中に安全、もしくは危険であることを示す文字列を含めるように指示する
- openhandsのアウトプットから危険であることがわかったらリポジトリのディレクトリを消す

リスク分析の内容、及びその結果から安全・危険を判断するための基準となる文字列は完全にプロンプトやユーザーの設定に依存し、ユーザー自身でカスタマイズできる。

## OpenHandsによるリスク分析の効率化

Docker上のOpenhandsにリスク分析させる前に、 yamadashy/repomix https://github.com/yamadashy/repomix を使ってリポジトリのコードを一つにまとめる（実際にはある程度の行数の範囲におさまるように、大きすぎたら再びファイルを分割する）ことで、LLMによるリポジトリ読み込みの効率化をする

## openhandsのアウトプットparse
OpenHandsをdocker上で実行したときのログは常に構造化されているわけではないが、いくつかの形式のパターンで決まっている。
OpenHandsによるリスク分析の終了時には、`AgentFinishAction(final_thought='<コードベースの分析結果>')`という出力がされる。ここから分析結果を抜き出すことで、安全/危険の判定をする
ただし、これは必ずそうしなければならないわけではなく、OpenHandsの出力内容次第で、より正確な実装ができるだろう。

